Cellulesion design notes
========================

TASKS:
======
* Make a WinSCP sync script for Brownhome

BUGS:
=====
+ 29.04.18  Re. updateVelocityCircular() - I need to sketch out the range of alternatives I think i might want to explore with this pattern.
			I have a feeling that current approach is too limiting. I can imagine varying radius, sector angle across the 2D space. It has to work with 2 generations too.
+ 24.04.18 updateVelocityCircular3() still not working 100% correctly - e.g. with generations <5
			- The length (or angle?) seems to be ok in some cases but slightly off in others
			- Maybe better to set initial angle & rotate instead of using 'fromAngle'??
+ PImage img seems to be rotated 90 degrees anticlockwise
  

IMPROVEMENTS:
=============
* 22.04.18 updateVelocityCircular() is not necessarily the optimum approach. The vector could simply calculated the x/y coords of the circular path using sin() & cos()
* 18.04.18 More flexible scaling - so a grid can occupy a larger area than the visible screen (not see edges when rotating)

* 18.04.18 Size changes over time

* 17.04.18 Twice the distance, half the value (or half squared)

* 16.04.18 One (randomly chosen, or maybe central) cell looks at you, but all the others look at that one (or the middle)
* 16.04.18 Or make all but one look to the side, but one randomly chosen cell look directly at you
* 16.04.18 Make one of the cells a different shape or colour and all the others can look towards it?
* 16.04.18 Eyes should look towards a certain point (or change direction according to noise?)

* 14.04.18 Try like cellulesion-007-20180412-213910 but move focal point in opposite directio (straight first then curve outwards)

* 11.04.18 Make the wiggle vary in amount by a multiplier!

* 10.04.18 Main focus of rotation is not locked at width/2, height/2 but instead rotates in a circle around it

* 10.04.18 Linear velocity 'points away from' a focal point at some distance from the 'center' which moves in a circle in the opposite direction (DONE)
	> The angle of rotation may be offset cyclically +/- (DONE)
	
* 09.04.18 Only display at give intervals (could also be solved by taking much bigger steps in Vel & fewr generations) But trickier to calculate...
	> I want to make this more like a 'render option' - a bit like stripes but more flexible, only display every 10th cell
	> Is also achieved by increasing the magnitude of the velocity vector & reducing the number of generations
		- Leading to the notion that maybe 'desired length' should be defined and velMag/generations calculated from it
	
* 04.04.18 Hitting a certain hue = death

* 26.03.18 Make sure ALL relevant settings are logged by logSettings()

* 23.03.18 Colourwalker: Sample colour at position. If hue is going clockwise in the colour circle, turn velocity clockwise. Scale by brightness (stop at black?)
	> The closer to successive hues are to one another, the lower the angular deflection should be. Configurable range (0-180 degrees is maximum).
	> Could use FromAngle - LerpColor??
	> Alternatively: lerp() between old velocity & new 'from colour angle' velocity? (can vary % of new angle vs % of old)
	> 01.04.18 Trying for velocity from lerped colour.
	
* Is it time to start considering the noisefields with specific purposes in mind?

* Colour array should also be able to 'move and warp' through the epochs in a similar way to start position

* Think about the requirements for passing values BACK into the array
	- they must be the (absolute) cell values which change during growth (like position?), not the multiplying factors


REFACTORING:
============
* 21.04.18 Stop writing ffmpeg.text debug output
+ Simplify the code - both size & vMax arrays (& there will be others) are populated with values in range 0-1 by a variety of algorithms. Synergies!
+ Consider moving epoch-modulated values so they are only recalculated ONCE at the start of an epoch (e.g. if(generation==1) {newEpoch()}
+ Make a variable for selecting render type (primitive: rect, ellipse or triangle) (2018-01-16)
+ NEED a way of logging the pattern configuration choices (need to be parameterized)
+ Option to export .png epoch frames with framenr. as filename & timestamp as folder for later conversion to video (more flexibility to optimise)
* See http://hamelot.io/visualization/using-ffmpeg-to-convert-a-set-of-images-into-a-video/
+ Populate arrays with the ranges of required sin/cos values (e.g. equal to number of generations) instead of recalculating each time


NEW FEATURES:
=============

+ Consider ways in which new cells may be ADDED after the colony has started running
	> Seriously? How will this look in videos with new cells suddenly appearing?)
+ Introduce branching ?
+ Instead of 2D noisefield use an image and pick out the colour values from the pixels!!! Vary radius of circular path for each cycle :D
+ 'Chosen ones' get a different colour than all the others (& why not a different set of values in other ways too?)
+ Pick from a pallette of colours rather than always calculating each HSB value individually.
+ Phyllotaxis seed position
+ Seed position as grid but only add cell if noise value is above a given threshold
+ Alternative rendering patterns:
	> Triangle strips?
	> Lines



RANDOM IDEAS:
=============
* 16.04.18 Make a 'colour picker' app which loads a picture & prints HSB values at mouse location
* 04.01.18 Try using RGB mode to make gradients from one hue to another, instead of light/dark etc.


DOCUMENTATION TASKS:
====================
+ Make a list of variables that can be modulated through the Epoch, noting which ones I have tried & result:
	1) noiseRadius  1/6  Just seemed to modulate size, not very exciting 
	2) noiseFactor  4/6  Best when increasing as sq() from very high value to a low-end/high variation
	3) noiseOctaves 1/6  Is an integer, so changes in steps rather than smooth transition
	4) noiseFallOff
	5) noiseSeed
	6) cellSizeGlobalMax
	7) generations
